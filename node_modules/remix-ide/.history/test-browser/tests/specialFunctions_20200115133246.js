'use strict'
var init = require('../helpers/init')
var sauce = require('./sauce')

module.exports = {
  before: function (browser, done) {
    init(browser, done)
  },
  '@sources': function () {
    return sources
  },
  'Use special functions receive/fullback': function (browser) {
    let hash, signature
    browser.waitForElementVisible('#icon-panel', 10000)
    .testContracts('receiveAndfFallback.sol', sources[0]['browser/Untitled.sol'], ['TooMuchGas', 'test1', 'test2'])
    .clickLaunchIcon('udapp'
      .selectContract('CheckSpecials')
      .createContract('')
      .clickInstance(0)
      .perform((done) => {
        browser.getAddressAtPosition(0, (address) => {
          browser.clickFunction(`'(fallback)' - transact`, { types: 'bytes32 hash, bytes sig', values: inputs })
          .verifyCallReturnValue(
            address,
            ['0: address: 0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c'])
          .perform(() => {
            done()
          })
        })
      }).perform((done) => {
        browser.getAddressAtPosition(0, (address) => {
          browser.clickFunction(`'(receive)' - transact`, { types: 'bytes32 hash, bytes sig', values: inputs })
          .verifyCallReturnValue(
            address,
            ['0: address: 0xCA35b7d915458EF540aDe6068dFe2F44E8fa733c'])
          .perform(() => {
            done()
          })
        })
      })
      .end()
  },
  tearDown: sauce
}

var sources = [
  {
    'browser/receiveAndfFallback.sol': {
      content: `
        contract CheckSpecials {
          receive() payable external{}
          fallback() external {}
        }
      `
    },
    'browser/receiveOnly.sol': {
      content: `
        contract CheckSpecials {
          receive() payable external{}
        }
      `
    },
    'browser/fallbackOnly.sol': {
      content: `
        contract CheckSpecials {
          fallback() payable external{}
        }
      `
    }
]
