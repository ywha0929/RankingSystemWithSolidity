{"ast":null,"code":"import { mix } from 'popmotion';\nimport { complex } from 'style-value-types';\nimport { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nvar varToken = \"_$css\";\nvar correctBoxShadow = {\n  correct: function correct(latest, _a) {\n    var treeScale = _a.treeScale,\n        projectionDelta = _a.projectionDelta;\n    var original = latest;\n    /**\n     * We need to first strip and store CSS variables from the string.\n     */\n\n    var containsCSSVariables = latest.includes(\"var(\");\n    var cssVariables = [];\n\n    if (containsCSSVariables) {\n      latest = latest.replace(cssVariableRegex, function (match) {\n        cssVariables.push(match);\n        return varToken;\n      });\n    }\n\n    var shadow = complex.parse(latest); // TODO: Doesn't support multiple shadows\n\n    if (shadow.length > 5) return original;\n    var template = complex.createTransformer(latest);\n    var offset = typeof shadow[0] !== \"number\" ? 1 : 0; // Calculate the overall context scale\n\n    var xScale = projectionDelta.x.scale * treeScale.x;\n    var yScale = projectionDelta.y.scale * treeScale.y;\n    shadow[0 + offset] /= xScale;\n    shadow[1 + offset] /= yScale;\n    /**\n     * Ideally we'd correct x and y scales individually, but because blur and\n     * spread apply to both we have to take a scale average and apply that instead.\n     * We could potentially improve the outcome of this by incorporating the ratio between\n     * the two scales.\n     */\n\n    var averageScale = mix(xScale, yScale, 0.5); // Blur\n\n    if (typeof shadow[2 + offset] === \"number\") shadow[2 + offset] /= averageScale; // Spread\n\n    if (typeof shadow[3 + offset] === \"number\") shadow[3 + offset] /= averageScale;\n    var output = template(shadow);\n\n    if (containsCSSVariables) {\n      var i_1 = 0;\n      output = output.replace(varToken, function () {\n        var cssVariable = cssVariables[i_1];\n        i_1++;\n        return cssVariable;\n      });\n    }\n\n    return output;\n  }\n};\nexport { correctBoxShadow };","map":null,"metadata":{},"sourceType":"module"}