{"ast":null,"code":"import { __read } from 'tslib';\nimport sync from 'framesync';\nimport { useEffect } from 'react';\nimport { useInstantLayoutTransition } from '../projection/use-instant-layout-transition.mjs';\nimport { useForceUpdate } from './use-force-update.mjs';\nimport { instantAnimationState } from './use-instant-transition-state.mjs';\n\nfunction useInstantTransition() {\n  var _a = __read(useForceUpdate(), 2),\n      forceUpdate = _a[0],\n      forcedRenderCount = _a[1];\n\n  var startInstantLayoutTransition = useInstantLayoutTransition();\n  useEffect(function () {\n    /**\n     * Unblock after two animation frames, otherwise this will unblock too soon.\n     */\n    sync.postRender(function () {\n      return sync.postRender(function () {\n        return instantAnimationState.current = false;\n      });\n    });\n  }, [forcedRenderCount]);\n  return function (callback) {\n    startInstantLayoutTransition(function () {\n      instantAnimationState.current = true;\n      forceUpdate();\n      callback();\n    });\n  };\n}\n\nexport { useInstantTransition };","map":null,"metadata":{},"sourceType":"module"}