import { ViewPlugin } from './view';
import { Message, ExternalProfile, Profile, LocationProfile } from '../../../utils';
import { ExternalPlugin } from './external';
export declare type IframeProfile = Profile & LocationProfile & ExternalProfile;
/**
 * Connect an Iframe client to the engine.
 * @dev This implements the ViewPlugin as it cannot extends two class. Maybe use a mixin at some point
 */
export declare class IframePlugin extends ExternalPlugin implements ViewPlugin {
    profile: IframeProfile;
    private readonly listener;
    private iframe;
    private origin;
    private source;
    constructor(profile: IframeProfile);
    /** Implement "activate" of the ViewPlugin */
    activate(): Promise<void>;
    /** Implement "deactivate" of the ViewPlugin */
    deactivate(): void;
    /** Get message from the iframe */
    private getEvent;
    /**
     * Post a message to the iframe of this plugin
     * @param message The message to post
     */
    protected postMessage(message: Partial<Message>): void;
    /** Create and return the iframe */
    render(): HTMLIFrameElement;
}
