import { Message, ExternalProfile, Profile } from '../../../utils';
import { ExternalPlugin, ExternalPluginOptions } from './external';
interface WebsocketOptions extends ExternalPluginOptions {
    /** Time (in ms) to wait before reconnection after connection closed */
    reconnectDelay: number;
}
export declare type WebsocketProfile = Profile & ExternalProfile;
export declare class WebsocketPlugin extends ExternalPlugin {
    profile: WebsocketProfile;
    private readonly listener;
    private readonly reconnectOnclose;
    protected socket: WebSocket;
    protected options: WebsocketOptions;
    constructor(profile: WebsocketProfile, options?: Partial<WebsocketOptions>);
    activate(): Promise<void>;
    deactivate(): void;
    setOptions(options?: Partial<WebsocketOptions>): void;
    /** Try to reconnect to net websocket if closes */
    protected reconnect(): void;
    /** Connect to the websocket */
    protected connect(): void;
    /** Get message from the iframe */
    private getEvent;
    /**
     * Post a message to the iframe of this plugin
     * @param message The message to post
     */
    protected postMessage(message: Partial<Message>): void;
}
export {};
