const yo = require('yo-yo')
const csjs = require('csjs-inject')

const css = csjs`

  .ghostbar           {
    width             : 3px;
    background-color  : var(--primary);
    opacity           : 0.5;
    position          : absolute;
    cursor            : col-resize;
    z-index           : 9999;
    top               : 0;
    bottom            : 0;
  }
`

export default class PanelsResize {
  constructor (idpanel) {
    this.panel = document.querySelector(idpanel)
    this.minWidth = this.panel.clientWidth
    let ghostbar = yo`<div class=${css.ghostbar}></div>`

    let mousedown = (event) => {
      event.preventDefault()
      if (event.which === 1) {
        moveGhostbar(event)
        document.body.appendChild(ghostbar)
        document.addEventListener('mousemove', moveGhostbar)
        document.addEventListener('mouseup', removeGhostbar)
        document.addEventListener('keydown', cancelGhostbar)
      }
    }

    let cancelGhostbar = (event) => {
      if (event.keyCode === 27) {
        document.body.removeChild(ghostbar)
        document.removeEventListener('mousemove', moveGhostbar)
        document.removeEventListener('mouseup', removeGhostbar)
        document.removeEventListener('keydown', cancelGhostbar)
      }
    }

    let moveGhostbar = (event) => { // @NOTE VERTICAL ghostbar
      ghostbar.style.left = event.x + 'px'
    }

    let setPosition = (event) => {
      let panelWidth = calculatePanelWidth(event)
      if (panelWidth !== 0) this.panel.style.width = panelWidth + 'px'
      else this.hidePanel()
    }

    let removeGhostbar = (event) => {
      document.body.removeChild(ghostbar)
      document.removeEventListener('mousemove', moveGhostbar)
      document.removeEventListener('mouseup', removeGhostbar)
      document.removeEventListener('keydown', cancelGhostbar)
      setPosition(event)
    }

    let calculatePanelWidth = (event) => {
      let panelWidth = event.x// - this.panel.offsetLeft
      return panelWidth < this.minWidth - 10 ? 0 : panelWidth
    }

    window.addEventListener('resize', function (event) {
      setPosition(event)
    })


    setPosition(this.minWidth)
  }

  hidePanel () {
    this.panel.style.display = 'none'
  }

  showPanel () {
    this.panel.style.display = 'flex'
  }
}
